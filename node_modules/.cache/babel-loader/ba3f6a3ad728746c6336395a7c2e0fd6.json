{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clock\\\\OneDrive\\\\Documentos\\\\GitHub\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\";\nimport { Component } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentArea extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      // comments will go here\n      isLoading: false,\n      isError: false\n    };\n\n    this.componentDidUpdate = async prevProps => {\n      if (prevProps.asin !== this.props.asin) {\n        this.setState({\n          isLoading: true\n        });\n\n        try {\n          let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\n            headers: {\n              Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWIwYjZlNjRjZmY1ZjAwMTU5MGJkYzciLCJpYXQiOjE2NDE5MDcyNjMsImV4cCI6MTY0MzExNjg2M30.YWvR1qJfPDSr1OwPxIF-KJ1vmSJmMXBIh92tNfek4FI'\n            }\n          });\n          console.log(response);\n\n          if (response.ok) {\n            let comments = await response.json();\n            this.setState({\n              comments: comments,\n              isLoading: false,\n              isError: false\n            });\n          } else {\n            console.log('error');\n            this.setState({\n              isLoading: false,\n              isError: true\n            });\n          }\n        } catch (error) {\n          console.log(error);\n          this.setState({\n            isLoading: false,\n            isError: true\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 42\n      }, this), this.state.isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 40\n      }, this), \"this.state.comments ? \", /*#__PURE__*/_jsxDEV(CommentList, {\n        commentsToShow: this.state.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select a book to see comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CommentArea;","map":{"version":3,"sources":["C:/Users/clock/OneDrive/Documentos/GitHub/m4-d6-hw/src/components/CommentArea.jsx"],"names":["Component","CommentList","AddComment","Loading","Error","Card","CommentArea","state","comments","isLoading","isError","componentDidUpdate","prevProps","asin","props","setState","response","fetch","headers","Authorization","console","log","ok","json","error","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCO,KAFgC,GAExB;AACJC,MAAAA,QAAQ,EAAE,EADN;AACU;AACdC,MAAAA,SAAS,EAAE,KAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAFwB;;AAAA,SAQhCC,kBARgC,GAQX,MAAOC,SAAP,IAAqB;AACtC,UAAIA,SAAS,CAACC,IAAV,KAAmB,KAAKC,KAAL,CAAWD,IAAlC,EAAwC;AACpC,aAAKE,QAAL,CAAc;AACVN,UAAAA,SAAS,EAAE;AADD,SAAd;;AAGA,YAAI;AACA,cAAIO,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyD,KAAKH,KAAL,CAAWD,IAArE,EAA2E;AACjGK,YAAAA,OAAO,EAAE;AACLC,cAAAA,aAAa,EAAE;AADV;AADwF,WAA3E,CAA1B;AAKAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,cAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,gBAAId,QAAQ,GAAG,MAAMQ,QAAQ,CAACO,IAAT,EAArB;AACA,iBAAKR,QAAL,CAAc;AAAEP,cAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,cAAAA,SAAS,EAAE,KAAjC;AAAwCC,cAAAA,OAAO,EAAE;AAAjD,aAAd;AACH,WAHD,MAGO;AACHU,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAKN,QAAL,CAAc;AAAEN,cAAAA,SAAS,EAAE,KAAb;AAAoBC,cAAAA,OAAO,EAAE;AAA7B,aAAd;AACH;AACJ,SAdD,CAcE,OAAOc,KAAP,EAAc;AACZJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,eAAKT,QAAL,CAAc;AAAEN,YAAAA,SAAS,EAAE,KAAb;AAAoBC,YAAAA,OAAO,EAAE;AAA7B,WAAd;AACH;AACJ;AACJ,KAhC+B;AAAA;;AAkChCe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,iBACK,KAAKlB,KAAL,CAAWE,SAAX,iBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAD7B,EAEK,KAAKF,KAAL,CAAWG,OAAX,iBAAsB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAF3B,yCAK0B,QAAC,WAAD;AAAa,QAAA,cAAc,EAAE,KAAKH,KAAL,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAL1B,qBAMI;AAAA,+BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9C+B;;AAiDpC,eAAeF,WAAf","sourcesContent":["import { Component } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nclass CommentArea extends Component {\r\n\r\n    state = {\r\n        comments: [], // comments will go here\r\n        isLoading: false,\r\n        isError: false\r\n    }\r\n\r\n    componentDidUpdate = async (prevProps) => {\r\n        if (prevProps.asin !== this.props.asin) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWIwYjZlNjRjZmY1ZjAwMTU5MGJkYzciLCJpYXQiOjE2NDE5MDcyNjMsImV4cCI6MTY0MzExNjg2M30.YWvR1qJfPDSr1OwPxIF-KJ1vmSJmMXBIh92tNfek4FI'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    this.setState({ comments: comments, isLoading: false, isError: false })\r\n                } else {\r\n                    console.log('error')\r\n                    this.setState({ isLoading: false, isError: true })\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setState({ isLoading: false, isError: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.isLoading && <Loading />}\r\n                {this.state.isError && <Error />}\r\n                \r\n                \r\n                this.state.comments ? <CommentList commentsToShow={this.state.comments} /> :\r\n                <span><h1>Select a book to see comments</h1></span>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}