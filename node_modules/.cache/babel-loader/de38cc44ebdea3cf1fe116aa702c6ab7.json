{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clock\\\\OneDrive\\\\Documentos\\\\GitHub\\\\m4-d6-hw\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { Component } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { Card } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  // state = {\n  //     comments: [], // comments will go here\n  //     isLoading: false,\n  //     isError: false\n  // }\n  const [comments, setComments] = useState({\n    comments\n  });\n  useEffect(() => {\n    fetchComments();\n  }, [asin]);\n\n  const fetchComments = async prevProps => {\n    if (prevProps.asin !== asin) {\n      setComments({\n        isLoading: true\n      });\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n          headers: {\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWIwYjZlNjRjZmY1ZjAwMTU5MGJkYzciLCJpYXQiOjE2NDE5MDcyNjMsImV4cCI6MTY0MzExNjg2M30.YWvR1qJfPDSr1OwPxIF-KJ1vmSJmMXBIh92tNfek4FI'\n          }\n        });\n        console.log(response);\n\n        if (response.ok) {\n          let comments = await response.json();\n          this.setState({\n            comments: comments,\n            isLoading: false,\n            isError: false\n          });\n        } else {\n          console.log('error');\n          this.setState({\n            isLoading: false,\n            isError: true\n          });\n        }\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 42\n    }, this), this.state.isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: this.props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: this.state.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n\n_s(CommentArea, \"HEkCNfWeHlSZ2syxYAXrxdFY8ho=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/clock/OneDrive/Documentos/GitHub/m4-d6-hw/src/components/CommentArea.jsx"],"names":["Component","CommentList","AddComment","Loading","Error","Card","useState","useEffect","CommentArea","asin","comments","setComments","fetchComments","prevProps","isLoading","response","fetch","headers","Authorization","console","log","ok","json","setState","isError","error","state","props"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAE5B;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AAACI,IAAAA;AAAD,GAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa;AAChB,GAFQ,EAEN,CAACH,IAAD,CAFM,CAAT;;AAKD,QAAMG,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACtC,QAAIA,SAAS,CAACJ,IAAV,KAAmBA,IAAvB,EAA6B;AACzBE,MAAAA,WAAW,CAAC;AACRG,QAAAA,SAAS,EAAE;AADH,OAAD,CAAX;;AAGA,UAAI;AACA,YAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yDAAyDP,IAA1D,EAAgE;AACtFQ,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,EAAE;AADV;AAD6E,SAAhE,CAA1B;AAKAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,YAAIA,QAAQ,CAACM,EAAb,EAAiB;AACb,cAAIX,QAAQ,GAAG,MAAMK,QAAQ,CAACO,IAAT,EAArB;AACA,eAAKC,QAAL,CAAc;AAAEb,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBI,YAAAA,SAAS,EAAE,KAAjC;AAAwCU,YAAAA,OAAO,EAAE;AAAjD,WAAd;AACH,SAHD,MAGO;AACHL,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,eAAKG,QAAL,CAAc;AAAET,YAAAA,SAAS,EAAE,KAAb;AAAoBU,YAAAA,OAAO,EAAE;AAA7B,WAAd;AACH;AACJ,OAdD,CAcE,OAAOC,KAAP,EAAc;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,aAAKF,QAAL,CAAc;AAAET,UAAAA,SAAS,EAAE,KAAb;AAAoBU,UAAAA,OAAO,EAAE;AAA7B,SAAd;AACH;AACJ;AACJ,GAxBF;;AA2BK,sBACI;AAAA,eACK,KAAKE,KAAL,CAAWZ,SAAX,iBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAD7B,EAEK,KAAKY,KAAL,CAAWF,OAAX,iBAAsB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAF3B,eAII,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWlB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,WAAD;AAAa,MAAA,cAAc,EAAE,KAAKiB,KAAL,CAAWhB;AAAxC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAnDL;;GAAMF,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import { Component } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\nimport { Card } from 'react-bootstrap'\r\nimport { useState, useEffect} from 'react'\r\n\r\nconst CommentArea = ({asin}) => {\r\n\r\n    // state = {\r\n    //     comments: [], // comments will go here\r\n    //     isLoading: false,\r\n    //     isError: false\r\n    // }\r\n\r\n    const [comments, setComments] = useState({comments})\r\n     \r\n    useEffect(() => {\r\n        fetchComments()\r\n    }, [asin])\r\n\r\n\r\n   const fetchComments = async (prevProps) => {\r\n        if (prevProps.asin !== asin) {\r\n            setComments({\r\n                isLoading: true\r\n            })\r\n            try {\r\n                let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\r\n                    headers: {\r\n                        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWIwYjZlNjRjZmY1ZjAwMTU5MGJkYzciLCJpYXQiOjE2NDE5MDcyNjMsImV4cCI6MTY0MzExNjg2M30.YWvR1qJfPDSr1OwPxIF-KJ1vmSJmMXBIh92tNfek4FI'\r\n                    }\r\n                })\r\n                console.log(response)\r\n                if (response.ok) {\r\n                    let comments = await response.json()\r\n                    this.setState({ comments: comments, isLoading: false, isError: false })\r\n                } else {\r\n                    console.log('error')\r\n                    this.setState({ isLoading: false, isError: true })\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n                this.setState({ isLoading: false, isError: true })\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n        return (\r\n            <div>\r\n                {this.state.isLoading && <Loading />}\r\n                {this.state.isError && <Error />}\r\n                \r\n                <AddComment asin={this.props.asin} />\r\n                <CommentList commentsToShow={this.state.comments} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default CommentArea"]},"metadata":{},"sourceType":"module"}